<?php

function tibarmy_sort_install() {
  module_load_include('inc', 'tibarmy_sort', 'tibarmy_sort');

  // Check that our field is not already created.
  if (!field_info_field(TIB_SORT_FIELD_NAME)) {

    // Create the field base.
    $field = array(
      'field_name' => TIB_SORT_FIELD_NAME,
      'type' => 'text',
    );

    try {
      field_create_field($field);

      // Create the field instance on the bundle.
      $instance = array(
        'field_name' => TIB_SORT_FIELD_NAME,
        'entity_type' => 'node',
        'label' => TIB_SORT_FIELD_LABEL,
        'bundle' => 'notice',
        // If you don't set the "required" property then the field wont be required by default.
        'required' => FALSE,
        'settings' => array(),
        'widget' => array(
          'type' => 'textfield',
        ),
      );
      field_create_instance($instance);

    } catch (FieldException $fe) {
      watchdog('tibarmy_sort module', "Field exception thrown in creating the '".
        TIB_SORT_FIELD_NAME . "' field: " . $fe->getMessage());
    }
  }
}

function tibarmy_sort_uninstall() {
  $fldname = 'field_tibsortval';
  $instance = field_info_instance('node', $fldname, 'notice');
  if($instance) {
    field_delete_instance($instance);
  } else {
    watchdog('tibarmy sort module', "Could not find field defintion to delete: " . $fldname);
  }
}

/**
 * Add Tibetan sort field values to existing nodes for the Notice content type by invoking hook_presave
 */
function tibarmy_sort_update_7000(&$sandbox) {

  if (!isset($sandbox['progress'])) {
    $sandbox['progress'] = 0;
    $sandbox['current_uid'] = 0;
    // We'll -1 to disregard the uid 0...
    $sandbox['max'] = db_query('SELECT COUNT(nid) FROM {node} WHERE type=:mytype', array(':mytype' => 'notice'))->fetchField();
  }

  $limit = 10;

  $query = db_select('node', 'n')
    ->fields('n', array('nid'))
    ->condition('type', 'notice')
    ->range($sandbox['progress'], $limit)
    ->orderBy('nid', 'ASC')
    ->execute();
  $nids = $query->fetchCol('nid');

  foreach ($nids as $nid) {
    $node = node_load($nid);
    tibarmy_sort_field_add($node);
    node_save($node);
    $sandbox['progress']++;
    $sandbox['current_nid'] = $node->nid;
  }

  $sandbox['#finished'] = empty($sandbox['max']) ? 1 : ($sandbox['progress'] / $sandbox['max']);
}
